1. Основной функционал:
Создание пользователя: пользователь может быть зарегистрирован через эндпоинт /api/auth/register. Все необходимые данные (имя пользователя, почта, пароль) передаются через JSON.
Создание подписки: реализован эндпоинт для создания подписки (/api/subscriptions/). Пользователь, выбравший тарифный план и указав продолжительность, может создать подписку. В базе данных учитываются поля user_id, plan_name, start_date, end_date, status.
Создание платежа: для создания платежа через /api/payments/create-checkout-session отправляется запрос с суммой и планом, а также уникальным идентификатором пользователя. Платеж сохраняется в базе данных с полем status, которое по умолчанию установлено в значение «ожидает».
Подтверждение платежа: через эндпойнт /api/payments/confirm-payment можно подтвердить платеж, обновив его статус в базе данных с «ожидает подтверждения» на «подтверждено», а также активировать подписку пользователя.
Получение подписок: реализован эндпоинт /api/subscriptions/{user_id}, который позволяет получить все подписки конкретного пользователя по его user_id. Ответ включает список всех активных подписок для этого пользователя.
API-методы:
Метод для создания подписки.
Метод для получения подписок.
Метод для создания платежа.
Метод для подтверждения платежа.
2. База данных:
Модели:
User: Модель пользователя с полями id, username, email, password_hash.
Subscription: Модель подписки с полями id, user_id, plan_name, start_date, end_date, status.
Payment: Модель платежа с полями id, user_id, plan_name, amount, status, subscription_id.
Связи:
Связь между пользователем и подписками.
Связь между подписками и платежами.
3. Роутеры:
auth.py — регистрация пользователей.
subscriptions.py — создание подписки, получение подписок.
payments.py — создание и подтверждение платежей.
4. Тестирование:
Все необходимые тесты были выполнены через PowerShell с использованием Invoke-WebRequest. Протестированы следующие запросы:
Регистрация пользователя.
Создание подписки.
Создание платежа.
Подтверждение платежа.
Получение подписок по user_id.
5. Проблемы:
Были проблемы с методом подтверждения платежа, которые удалось решить.
Изначально API для получения подписок не было настроено должным образом, что позже было исправлено.
6. Дальнейшие шаги:
Реализация обработки ошибок: можно добавить больше обработки ошибок и исключений, например, если пользователь пытается создать подписку с неверным или отсутствующим user_id.
Может потребоваться повышение безопасности: например, добавление шифрования паролей в базе данных или улучшение процесса аутентификации.
Документация по API: Сейчас все работает, но для полноты картины можно улучшить документацию по API.
В целом проект реализует базовый функционал для работы с пользователями, подписками и платежами с использованием FastAPI и PostgreSQL.

https://avatars.mds.yandex.net/get-shedevrum/15247898/img_f7e52885b6f611efad581698f586a420/orig

https://avatars.mds.yandex.net/get-shedevrum/13976311/img_207730dfb6f811ef9871ca21692ca115/orig